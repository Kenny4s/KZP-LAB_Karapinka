# Запитуємо у користувача розмір квадрата
n_rows = int(input("Введіть розмір квадрата: "))

# Запитуємо у користувача символ для заповнення квадрата
symbol = input("Введіть символ для заповнення: ")

# Перевіряємо коректність введеного символу
if len(symbol) == 0:
    print("Некоректний символ. Відсутній символ.")
    exit()  # Завершуємо програму, якщо символ не введено
elif len(symbol) > 1:
    print("Некоректний ввід. Забагато символів.")
    exit()  # Завершуємо програму, якщо введено більше одного символу

# Використовуємо перший символ, якщо введено більше одного
symbol = symbol[0]

# Створюємо двовимірний масив для зберігання символів квадрата
arr = []
arr_indx = 1  # Індекс для визначення кількості символів у кожному рядку
for i in range(n_rows):
    # Додаємо новий рядок із заданою кількістю символів
    arr.append([symbol] * arr_indx)

    # Умови для збільшення чи зменшення кількості символів у рядку
    if n_rows % 2 == 0 and i == (n_rows // 2) - 1:
        continue  # Пропускаємо зміну індексу для середини парного квадрата
    elif i < (n_rows // 2):
        arr_indx += 1  # Збільшуємо кількість символів у рядку в першій половині
    else:
        arr_indx -= 1  # Зменшуємо кількість символів у рядку в другій половині

# Виводимо квадрат у вигляді піраміди
arr_indx = 1  # Індекс для визначення кількості символів у кожному рядку при виводі
for i in range(n_rows):
    # Друкуємо відступи перед символами для вирівнювання по центру
    for j in range(n_rows - arr_indx):
        print(' ', end='')
    # Виводимо символи поточного рядка
    for j in range(arr_indx):
        print(arr[i][j], end='')
    print()  # Переходимо на новий рядок після кожного рядка символів

    # Умови для зміни кількості символів у рядку (аналогічно блоку заповнення масиву)
    if n_rows % 2 == 0 and i == (n_rows // 2) - 1:
        continue
    elif i < (n_rows // 2):
        arr_indx += 1
    else:
        arr_indx -= 1
